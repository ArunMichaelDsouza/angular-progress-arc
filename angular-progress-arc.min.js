/*! angular-progress-arc - v0.3.0 (http://mathewbyrne.github.io/angular-progress-arc/) */
!function(a){"use strict";var b={size:200,strokeWidth:20,stroke:"black",background:null},c=a.module("angular-progress-arc",[]);c.directive("progressArc",function(){return{restrict:"E",scope:{size:"@",strokeWidth:"@",stroke:"@",counterClockwise:"@",complete:"&",background:"@"},compile:function(c,d){return a.forEach(b,function(a,b){d[b]||(d[b]=a)}),function(a){a.offset=/firefox/i.test(navigator.userAgent)?-89.9:-90;var b=function(){a.strokeWidthCapped=Math.min(a.strokeWidth,a.size/2-1),a.radius=Math.max((a.size-a.strokeWidthCapped)/2-1,0),a.circumference=2*Math.PI*a.radius};a.$watchCollection("[size, strokeWidth]",b),b()}},template:'<svg ng-attr-width="{{ size }}" ng-attr-height="{{ size }}"><circle fill="none" ng-if="background" ng-attr-cx="{{ size / 2 }}" ng-attr-cy="{{ size / 2 }}" ng-attr-r="{{ radius }}" ng-attr-stroke="{{ background }}" ng-attr-stroke-width="{{ strokeWidthCapped }}"/><circle fill="none" ng-attr-cx="{{ size / 2 }}" ng-attr-cy="{{ size / 2 }}" ng-attr-r="{{ radius }}" ng-attr-stroke="{{ stroke }}" ng-attr-stroke-width="{{ strokeWidthCapped }}"ng-attr-stroke-dasharray="{{ circumference }}"ng-attr-stroke-dashoffset="{{ (counterClockwise ? -1 : 1 ) * (1 - complete()) * circumference }}"ng-attr-transform="rotate({{ offset }}, {{ size / 2 }}, {{ size / 2 }})"/></svg>'}})}(window.angular);