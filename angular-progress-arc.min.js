/*! angular-progress-arc - v0.1.0 (https://github.com/mathewbyrne/angular-progress-arc) */
!function(a){"use strict";var b=function(a,b,c,d){return[a+c*Math.cos(d),b+c*Math.sin(d)]},c=function(a){return a*Math.PI*2},d=-Math.PI/2,e=c(.99),f=a.module("angular-progress-arc",[]);f.directive("progressArc",function(){return{restrict:"E",scope:{width:"@",height:"@",strokeWidth:"@",stroke:"@",counterClockwise:"@",progress:"&"},link:function(a){a.getDescription=function(){var f=a.progress();if(0>=f)return"M 0 0";var g=a.width/2,h=a.height/2,i=Math.min(a.width,a.height);a.strokeWidth=Math.min(a.strokeWidth,i/2);var j=(i-a.strokeWidth)/2-1,k=b(g,h,j,d),l=f>.5?1:0,m=parseInt(a.counterClockwise)?0:1,n=f>=1?e:c(f),o=b(g,h,j,m?d+n:d-n),p=["M",k[0],k[1],"A",j,j,0,l,m,o[0],o[1]];return f>=1&&(p=p.concat(["A",j,j,0,0,m,k[0],k[1]])),p.join(" ")}},template:'<svg ng-attr-width="{{ width }}" ng-attr-height="{{ height }}"><path fill="none" ng-attr-stroke="{{ stroke }}" ng-attr-stroke-width="{{ strokeWidth }}" ng-attr-d="{{ getDescription() }}"></svg>'}})}(window.angular);